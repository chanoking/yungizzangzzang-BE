name: Deploy to Amazon EKS

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 737460622117.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: last-bite-repository
  K8S_NAMESPACE: default
  K8S_DEPLOYMENT_NAME: last-bite-deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        echo "::set-output name=image::${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"

    - name: Install and configure kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

    - name: Deploy to EKS
      run: |
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} last-bite-api=${{ steps.build-image.outputs.image }} --namespace=${{ env.K8S_NAMESPACE }} --kubeconfig=kubeconfig.yaml
